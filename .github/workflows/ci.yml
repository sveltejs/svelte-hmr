# build and test on linux, windows, mac with node 12, 14, 16
name: CI

env:
  pnpm_store_path: ${{github.workspace}}/.pnpm-store
  CI: true

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pnpmstore:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ ubuntu-latest, macos-latest ]
        node: [ 12, 14, 16 ]

    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: install pnpm
        run: npm i -g pnpm@6
      - name: set pnpm store-dir
        run: pnpm config set store-dir ${{ env.pnpm_store_path }}
      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: pnpm-store-fallback
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        id: pnpm-store-fallback
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-
            ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-

      - name: install
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts
      - name: prune store
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        run: pnpm store prune
      - name: check store
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        run: pnpm store status

  lint:
    needs: pnpmstore

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: install pnpm
        run: npm i -g pnpm@6
      - name: set pnpm store-dir
        run: pnpm config set store-dir ${{ env.pnpm_store_path }}
      - name: install
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: lint
        run: pnpm lint

  audit:
    needs: pnpmstore

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: install pnpm
        run: npm i -g pnpm@6
      - name: set pnpm store-dir
        run: pnpm config set store-dir ${{ env.pnpm_store_path }}
      - name: install
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: audit
        run: pnpm audit

  test:
    needs: pnpmstore

    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        node: [ 12, 14, 16 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: install pnpm
        run: npm i -g pnpm@6
      - name: set pnpm store-dir
        run: pnpm config set store-dir ${{ env.pnpm_store_path }}
      - name: install
        run: pnpm install --frozen-lockfile --offline
      - name: run tests
        run: pnpm test:ci
